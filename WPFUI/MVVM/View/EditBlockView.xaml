<Window x:Class="WPFUI.MVVM.View.EditBlockView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:local="clr-namespace:WPFUI.MVVM.View"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="TimeTrack" 
        Height="650" 
        Width="550" 
        Icon="/Images/logo.png"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True">
        <!-- Import the converter for the program icons to be shown -->
    <Window.Resources>
        <local:ProgramToIconConverter x:Key="ProgramToIconConverter" />
    </Window.Resources>
    <Border Background="{StaticResource BGColourBrush}" CornerRadius="10" BorderBrush="White" BorderThickness="2">
        <Grid>
            <!-- Create title bar to allow the window to be moved around and to be exited -->
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="35"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="TitleBar"
                    Grid.Column="0" 
                    Grid.ColumnSpan="2" 
                    Grid.Row="0" 
                    Background="{StaticResource SecondaryColourBrush}" 
                    CornerRadius="10"
                    MouseLeftButtonDown="TitleBar_DragWindow">
            </Border>
            <TextBlock
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Grid.Row="0"
                VerticalAlignment="Center" 
                HorizontalAlignment="Center"
                Margin="0"
                Text="TimeTrack - Edit Block"
                FontSize="12"
                FontFamily="{StaticResource MainFont}"
                FontWeight="Light"
                Foreground="White"
                Background="Transparent"
                MouseLeftButtonDown="TitleBar_DragWindow">
            </TextBlock>
            <Button Style="{StaticResource ExitButtonTheme}"
                    Grid.Column="1"
                    Grid.Row="0"
                    Width="24"
                    Height="24"
                    Margin="0"
                    Click="CloseWindowButton_OnClick">
                <Image Style="{StaticResource ExitButtonImageTheme}" 
                       Width="22"
                       Height="22"
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Center"
                       Stretch="Uniform">
                </Image>
            </Button>
            
            <!-- Create the main content of the window in a scrollviewer to allow for overflow -->
            <ScrollViewer Grid.Row="1"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          VerticalScrollBarVisibility="Visible"
                          Style="{StaticResource ScrollBarTheme}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="15"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="15"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <!-- Create rows at the bottom of the page for the save and delete buttons -->
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="15"></RowDefinition>
                    </Grid.RowDefinitions>
                    
                    <!-- Create input for the block name and bind the value to the block element in the viewmodel -->
                    <StackPanel Grid.Column="1"
                                Grid.Row="1"
                                Orientation="Vertical"
                                VerticalAlignment="Top">
                        <TextBlock Text="Block Name"
                                   Foreground="White" 
                                   FontSize="{StaticResource SubheadingFontSize}"
                                   FontFamily="{StaticResource MainFont}"
                                   FontWeight="Medium"
                                   HorizontalAlignment="Left"
                                   RenderOptions.BitmapScalingMode="HighQuality">
                        </TextBlock>
                        <TextBox Margin="0 5 0 0"
                                 HorizontalAlignment="Left"
                                 Width="250" Height="30" FontSize="20" FontFamily="{StaticResource MainFont}" 
                                 MaxLength="20" 
                                 Text="{Binding UpdatedBlockData.Block.Name, Mode=TwoWay}">
                            <!-- Runs a command when the user moves away from the box to do input validation -->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <cmd:EventToCommand Command="{Binding DataContext.BlockNameTextBoxUnfocused, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                    
                    <!-- Create input for the user to add applications to be monitored/blocked -->
                    <TextBlock Text="Applications"
                               Grid.Column="1"
                               Grid.Row="2"
                               Foreground="White" 
                               FontSize="{StaticResource SubheadingFontSize}"
                               FontFamily="{StaticResource MainFont}"
                               FontWeight="Medium"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="0 15 0 0"
                               RenderOptions.BitmapScalingMode="HighQuality">
                    </TextBlock>
                    <!-- Open a browse menu when this is clicked -->
                    <Button Style="{StaticResource AddButtonTheme}"
                            Grid.Column="1"
                            Grid.Row="2"
                            Width="31"
                            Height="31"
                            Margin="10 0 6 0"
                            BorderThickness="0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Command="{Binding AddExecutablePathCommand}">
                        <Button.Clip>
                            <RectangleGeometry RadiusX="8" RadiusY="8" Rect="0,0,31,31"></RectangleGeometry>
                        </Button.Clip>
                    </Button>
                    <StackPanel Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch">
                        <!-- Use an ItemsControl to show all of the programs in the block -->
                        <ItemsControl x:Name="EditBlockViewItemsControl"
                                      ItemsSource="{Binding UpdatedBlockData.Programs}"
                                      HorizontalAlignment="Stretch">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Left"
                                          Margin="0 5 0 0"
                                          Background="White"
                                          Height="30"
                                          Width="510">
                                        <Grid.Clip>
                                            <RectangleGeometry RadiusX="8" RadiusY="8" Rect="0,0,510,30"></RectangleGeometry>
                                        </Grid.Clip>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <!-- Program icon -->
                                        <Border Grid.Column="0"
                                                Height="22"
                                                Width="22"
                                                BorderThickness="0"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Margin="5 0 0 0">
                                            <Border.Background>
                                                <ImageBrush Stretch="UniformToFill">
                                                    <ImageBrush.ImageSource>
                                                        <MultiBinding Converter="{StaticResource ProgramToIconConverter}">
                                                            <Binding Path="." />
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                                        </MultiBinding>
                                                    </ImageBrush.ImageSource>
                                                </ImageBrush>
                                            </Border.Background>
                                        </Border>
                                        <!-- Name of the program -->
                                        <TextBlock Grid.Column="1" Text="{Binding}"
                                                   Margin="5 0 0 0"
                                                   VerticalAlignment="Center"
                                                   FontSize="20"
                                                   FontFamily="{StaticResource MainFont}">
                                        </TextBlock>
                                        <!-- Delete program from block button  -->
                                        <Button Grid.Column="2"
                                                Width="20"
                                                Height="20"
                                                Margin="0 0 5 0"
                                                BorderThickness="0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource BinSmallButtonTheme}"
                                                Command="{Binding DataContext.RemoveExecutablePathCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}">
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        
                        <TextBlock Text="Recommended to Add"
                                   Foreground="White" 
                                   FontSize="{StaticResource SubheadingFontSize}"
                                   FontFamily="{StaticResource MainFont}"
                                   FontWeight="Medium"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="0 15 0 0"
                                   RenderOptions.BitmapScalingMode="HighQuality">
                        </TextBlock>
                        <ItemsControl ItemsSource="{Binding UpdatedBlockData.RecommendedBlockApplications}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="6"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Margin="0 5 10 0">
                                        <Grid Background="White"
                                              HorizontalAlignment="Left"
                                              Height="30"
                                              Width="80">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <!-- Program icon -->
                                            <Border Grid.Column="0"
                                                    Height="22"
                                                    Width="22"
                                                    BorderThickness="0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    Margin="5 0 0 0">
                                                <Border.Background>
                                                    <ImageBrush Stretch="UniformToFill">
                                                        <ImageBrush.ImageSource>
                                                            <MultiBinding Converter="{StaticResource ProgramToIconConverter}">
                                                                <Binding Path="." />
                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                                            </MultiBinding>
                                                        </ImageBrush.ImageSource>
                                                    </ImageBrush>
                                                </Border.Background>
                                            </Border>
                                            <!-- Delete program from block button  -->
                                            <Button Grid.Column="2"
                                                    Width="20"
                                                    Height="20"
                                                    Margin="0 0 10 0"
                                                    BorderThickness="0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource AddSmallButtonTheme}"
                                                    Command="{Binding DataContext.AddRecommendedExecutableCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    CommandParameter="{Binding}">
                                            </Button>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- ComboBox for user to select what mode/type of block they want to create -->
                    <TextBlock Text="Block Type"
                               Grid.Column="1"
                               Grid.Row="4"
                               Foreground="White" 
                               FontSize="{StaticResource SubheadingFontSize}"
                               FontFamily="{StaticResource MainFont}"
                               FontWeight="Medium"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="0 15 0 0"
                               RenderOptions.BitmapScalingMode="HighQuality">
                    </TextBlock>
                    <ComboBox ItemsSource="{Binding UpdatedBlockData.BlockTypeOptions}" 
                              SelectedItem="{Binding UpdatedBlockData.Type, Mode=TwoWay}"
                              Grid.Column="1"
                              Grid.Row="5"
                              Margin="0 5 0 0"
                              HorizontalAlignment="Left"
                              Width="510" Height="30" FontSize="20" FontFamily="{StaticResource MainFont}">
                              <!-- Runs a command to clear the block criteria when the Block Type is changed -->
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <cmd:EventToCommand Command="{Binding DataContext.BlockTypeChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                    </ComboBox>

                    <!-- Box for the user to modify the block criteria -->
                    <TextBlock Text="Block Criteria"
                               Grid.Column="1"
                               Grid.Row="6"
                               Foreground="White" 
                               FontSize="{StaticResource SubheadingFontSize}"
                               FontFamily="{StaticResource MainFont}"
                               FontWeight="Medium"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="0 15 0 0"
                               RenderOptions.BitmapScalingMode="HighQuality">
                    </TextBlock>
                    <!-- This is put in a ContentControl as I originally planned to allow the user to have multiple criteria for block -->
                    <ContentControl Content="{Binding UpdatedBlockData, Mode=TwoWay}"
                                    Grid.Column="1"
                                    Grid.Row="7"
                                    Margin="0 5 0 0">
                        <ContentControl.Resources>
                            <!-- There would need to be multiple DataTemplates for each type of block as the data for their criteria is saved differently -->
                            <DataTemplate x:Key="UsageBlockTemplate">
                                <Grid>
                                    <!-- Input for user to modify the block criteria -->
                                    <ItemsControl ItemsSource="{Binding Conditions, Mode=TwoWay}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid HorizontalAlignment="Left"
                                                      Margin="0 5 0 0"
                                                      Background="White"
                                                      Height="135"
                                                      Width="510">
                                                    <Grid.Clip>
                                                        <RectangleGeometry RadiusX="8" RadiusY="8" Rect="0,0,510,135"></RectangleGeometry>
                                                    </Grid.Clip>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="10"></RowDefinition>
                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="1" 
                                                               Text="Allowed Usage Per Day"
                                                               Margin="10 0 0 0"
                                                               VerticalAlignment="Center"
                                                               FontSize="20"
                                                               FontFamily="{StaticResource MainFont}">
                                                    </TextBlock>
                                                    <!-- TextBoxes for input of how long they want to limit their usage by -->
                                                    <!-- Function run on LostFocus for input validation -->
                                                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 5 0 0">
                                                        <TextBox Margin="10 0 5 0"
                                                                 HorizontalAlignment="Left"
                                                                 Width="25" Height="20" FontSize="15" FontFamily="{StaticResource MainFont}" 
                                                                 MaxLength="2" 
                                                                 Text="{Binding Value.Criteria[0], Mode=TwoWay}"
                                                                 LostFocus="BlockTimeTextBox_Unfocused">
                                                        </TextBox>
                                                        <TextBlock Grid.Row="1" 
                                                                   Text="hours,"
                                                                   VerticalAlignment="Center"
                                                                   Margin="0 0 5 0"
                                                                   FontSize="15"
                                                                   FontFamily="{StaticResource MainFont}">
                                                        </TextBlock>
                                                        <TextBox Margin="10 0 5 0"
                                                                 HorizontalAlignment="Left"
                                                                 Width="25" Height="20" FontSize="15" FontFamily="{StaticResource MainFont}" 
                                                                 MaxLength="2" 
                                                                 Text="{Binding Value.Criteria[1], Mode=TwoWay}"
                                                                 LostFocus="BlockTimeTextBox_Unfocused">
                                                        </TextBox>
                                                        <TextBlock Grid.Row="1" 
                                                                   Text="minutes"
                                                                   VerticalAlignment="Center"
                                                                   FontSize="15"
                                                                   FontFamily="{StaticResource MainFont}">
                                                        </TextBlock>
                                                    </StackPanel>
                                                    <TextBlock Grid.Row="3" 
                                                               Text="Days Active"
                                                               Margin="10 10 0 0"
                                                               VerticalAlignment="Center"
                                                               FontSize="20"
                                                               FontFamily="{StaticResource MainFont}">
                                                    </TextBlock>
                                                    <!-- ListBox for user to select which days they want the block to be active -->
                                                    <!-- TimeCriteriaListBox_Loaded selects all the days that were previously selected/saved from the database. 
                                                         This is because the selected items cannot be set from a binding value and must be done from code instead. -->
                                                    <ListBox Grid.Row="4" 
                                                             Margin="10 5 10 0" 
                                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                             SelectionMode="Multiple"
                                                             FontSize="15"
                                                             FontFamily="{StaticResource MainFont}"
                                                             BorderThickness="0"
                                                             Width="490"
                                                             x:Name="TimeCriteriaListBox"
                                                             Loaded="TimeCriteriaListBox_Loaded"
                                                             SelectionChanged="TimeCriteriaListBox_SelectionChanged">
                                                        <!-- Set the ListBox to show items horizontally -->
                                                        <ListBox.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ListBox.ItemsPanel>
                                                        <!-- Set custom style of ListBox to look better than the default windows look -->
                                                        <ListBox.Resources>
                                                            <Style TargetType="ListBoxItem">
                                                                <Setter Property="Margin" Value=" 0 0 5 0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="ListBoxItem">
                                                                            <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                                                                                <ContentPresenter />
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsSelected" Value="true">
                                                                                    <Setter TargetName="Border" Property="Background"
                                                                                        Value="#9999ab"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ListBox.Resources>
                                                        <!-- Set the list of days available to be selected -->
                                                        <ListBox.ItemsSource>
                                                            <x:Array Type="{x:Type sys:String}">
                                                                <sys:String>Mon</sys:String>
                                                                <sys:String>Tue</sys:String>
                                                                <sys:String>Wed</sys:String>
                                                                <sys:String>Thu</sys:String>
                                                                <sys:String>Fri</sys:String>
                                                                <sys:String>Sat</sys:String>
                                                                <sys:String>Sun</sys:String>
                                                            </x:Array>
                                                        </ListBox.ItemsSource>
                                                    </ListBox>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>
                            <!-- Stub DataTemplate for other types of blocks -->
                            <DataTemplate x:Key="TimeBlockStatus">
                                <Grid>
                                    <TextBlock Foreground="White" Text="test"></TextBlock>
                                </Grid>
                            </DataTemplate>
                        </ContentControl.Resources>
                        <!-- Set the DataTemplate of the criteria editing menu based on the type of Block to support different types of blocks -->
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UpdatedBlockData.Type}" Value="Usage Limit (Combined)">
                                        <Setter Property="ContentTemplate" Value="{StaticResource UsageBlockTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UpdatedBlockData.Type}" Value="Usage Limit (Per App)">
                                        <Setter Property="ContentTemplate" Value="{StaticResource UsageBlockTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>

                    <!-- Button to delete the block with a confirmation box -->
                    <Button Style="{StaticResource BinButtonTheme}"
                            Grid.Column="1"
                            Grid.Row="9"
                            Width="31"
                            Height="31"
                            Margin="6 15 10 0"
                            BorderThickness="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Command="{Binding DeleteBlockCommand}"
                            CommandParameter="{Binding UpdatedBlockData}">
                        <Button.Clip>
                            <RectangleGeometry RadiusX="8" RadiusY="8" Rect="0,0,31,31"></RectangleGeometry>
                        </Button.Clip>
                    </Button>

                    <!-- Button to save the block with input validation run when it is clicked -->
                    <Button Style="{StaticResource SaveButtonTheme}"
                            Grid.Column="1"
                            Grid.Row="9"
                            Width="31"
                            Height="31"
                            Margin="10 15 6 0"
                            BorderThickness="0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Command="{Binding SaveBlockCommand}"
                            CommandParameter="{Binding UpdatedBlockData}">
                        <Button.Clip>
                            <RectangleGeometry RadiusX="8" RadiusY="8" Rect="0,0,31,31"></RectangleGeometry>
                        </Button.Clip>
                    </Button>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Border>
</Window>
